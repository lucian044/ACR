// <auto-generated />
using Db;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace ACR.Migrations
{
    [DbContext(typeof(ACRDbContext))]
    [Migration("20171115040502_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Db.DataModels.Benefit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Days");

                    b.Property<int>("EmployeeId");

                    b.Property<double>("FirstHalf");

                    b.Property<int>("HoursPerDay");

                    b.Property<double>("MedicalBenefits");

                    b.Property<double>("MedicalContribution");

                    b.Property<double>("Other");

                    b.Property<double>("OtherSalary");

                    b.Property<double>("ReligiousRetirement");

                    b.Property<double>("Salary");

                    b.Property<double>("pLayPersonsRetirement");

                    b.Property<double>("pSocialSecurity");

                    b.Property<double>("pUnemployment");

                    b.Property<double>("pWokersComp");

                    b.HasKey("Id");

                    b.ToTable("Benefit");
                });

            modelBuilder.Entity("Db.DataModels.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<int>("CategoryNumber");

                    b.HasKey("Id");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("Db.DataModels.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("GradeSubject")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<bool>("NewEmployee");

                    b.Property<int>("RoleId");

                    b.Property<int>("SchoolId");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("Db.DataModels.Holiday", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Date");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<int>("SchoolID");

                    b.HasKey("Id");

                    b.ToTable("Holiday");
                });

            modelBuilder.Entity("Db.DataModels.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("Db.DataModels.School", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ADM");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<int>("City")
                        .HasMaxLength(255);

                    b.Property<int>("Contract");

                    b.Property<double>("CostEmp");

                    b.Property<string>("District")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("Fax")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<int>("IRN");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<int>("NumEmployee");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<int>("ZipCode");

                    b.HasKey("Id");

                    b.ToTable("School");
                });

            modelBuilder.Entity("Db.DataModels.Week", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CategoryId")
                        .IsRequired();

                    b.Property<int>("EmployeeID");

                    b.Property<int>("Fri");

                    b.Property<int>("Mon");

                    b.Property<int>("Quarter");

                    b.Property<int>("Thurs");

                    b.Property<int>("Tue");

                    b.Property<int>("Wed");

                    b.Property<DateTime>("WeekEnd");

                    b.Property<DateTime>("WeekStart");

                    b.HasKey("Id");

                    b.ToTable("Week");
                });

            modelBuilder.Entity("Db.DataModels.Employee", b =>
                {
                    b.HasOne("Db.DataModels.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
